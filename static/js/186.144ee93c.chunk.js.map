{"version":3,"file":"static/js/186.144ee93c.chunk.js","mappings":"kPAoDA,UA9CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,uFACdV,EADc,wDAEnBM,GAAU,GAFS,mBAIEK,EAAAA,EAAAA,IAAgBX,EAAS,YAJ3B,OAIXY,EAJW,OAKjBR,EAAWQ,EAAKC,SALC,kDAOjBL,EAASM,EAAAA,IAPQ,yBASjBR,GAAU,GATO,6EAAH,qDAYlBI,GACD,GAAE,CAACV,KAGF,gCACGK,IAAU,SAAC,IAAD,IACVF,EAAQY,OAAS,IAChB,4BACE,wBAAI,aACJ,+BACGZ,QADH,IACGA,OADH,EACGA,EAASa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGF,EADG,SASnBd,EAAQY,OAAS,IAChB,uBAAG,kEAEJR,IAAS,yBAAMA,MAGrB,C,4JCzCDa,EAAAA,EAAAA,SAAAA,QAAyBC,EAAAA,GAElB,IAAMC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAUG,EAAAA,GAAmB,CAClDC,OAAQ,CACNC,QAASC,EAAAA,MAHY,cACnBC,EADmB,yBAMlBA,EAASf,MANS,2CAAH,qDASXgB,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,uFACPV,EAAAA,EAAAA,IAAUW,EAAAA,GAAwB,CACvDP,OAAQ,CACNC,QAASC,EAAAA,GACTG,MAAOA,EACPC,KAAMA,KALoB,cACxBH,EADwB,yBAQvBA,EAASf,MARc,2CAAH,wDAWhBD,EAAe,mCAAG,WAAOX,EAASgC,GAAhB,uFACNZ,EAAAA,EAAAA,IAAA,UAAaa,EAAAA,GAAb,YAA+BjC,GAA/B,OAAyCgC,GAAW,CACzER,OAAQ,CACNC,QAASC,EAAAA,MAHgB,cACvBC,EADuB,yBAMtBA,EAASf,MANa,2CAAH,uD,wMC/BrB,IAAMS,EAAW,+BACXK,EAAU,mCACVH,EAAoB,sBACpBQ,EAAyB,gBACzBE,EAAiB,SACjBC,EAAa,mCACbpB,EAAiB,qD","sources":["components/Reviews/Reviews.jsx","services/api.jsx","services/constants.jsx"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { HTTP_ERROR_MSG } from 'services/constants';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loging, setLoging] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      if (!movieId) return;\n      setLoging(true);\n      try {\n        const data = await getMovieDetails(movieId, '/reviews');\n        setReviews(data.results);\n      } catch (error) {\n        setError(HTTP_ERROR_MSG);\n      } finally {\n        setLoging(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loging && <Loader />}\n      {reviews.length > 0 && (\n        <div>\n          <h2>Reviews</h2>\n          <ul>\n            {reviews?.map(({ id, author, content }) => (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length < 1 && (\n        <p>Unfortunately, there are no reviews available for this movie.</p>\n      )}\n      {error && <div>{error}</div>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport {\n  BASE_URL,\n  API_KEY,\n  TRENDING_ENDPOINT,\n  SEARCH_MOVIES_ENDPOINT,\n  MOVIE_ENDPOINT,\n} from './constants';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(TRENDING_ENDPOINT, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMoviesByQuery = async (query, page) => {\n  const response = await axios.get(SEARCH_MOVIES_ENDPOINT, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, details) => {\n  const response = await axios.get(`${MOVIE_ENDPOINT}/${movieId}${details}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '7d691cb5b3405ae4ec9a5d6e389d01f2';\nexport const TRENDING_ENDPOINT = '/trending/movie/day';\nexport const SEARCH_MOVIES_ENDPOINT = '/search/movie';\nexport const MOVIE_ENDPOINT = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const HTTP_ERROR_MSG = 'Oops! Something went wrong! Try reloading the page!';\n"],"names":["movieId","useParams","useState","reviews","setReviews","loging","setLoging","error","setError","useEffect","fetchReviews","getMovieDetails","data","results","HTTP_ERROR_MSG","length","map","id","author","content","axios","BASE_URL","getTrending","TRENDING_ENDPOINT","params","api_key","API_KEY","response","getMoviesByQuery","query","page","SEARCH_MOVIES_ENDPOINT","details","MOVIE_ENDPOINT","POSTER_URL"],"sourceRoot":""}