{"version":3,"file":"static/js/484.64593672.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.jsx","components/AdditionalInfo/AdditionalInfo.jsx","components/DetailsOfMovie/DetailsOfMovie.jsx","pages/MovieDetails.jsx","services/api.jsx","services/constants.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ to, children }) => {\n    return (\n      <NavLink to={to}>\n        {children}\n      </NavLink>\n    );\n  };\n\n  BackLink.propTypes = {\n    to: PropTypes.object.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n  \n  export default BackLink;","import Loader from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport { NavLink, Outlet} from 'react-router-dom';\n\nconst AdditionalInfo = () => {\n  return (\n    <section>\n      <h4>Additional information</h4>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nexport default AdditionalInfo;\n","import { POSTER_URL } from 'services/constants';\nimport noPoster from '../../image/no-poster.jpg';\nimport PropTypes from 'prop-types';\n\nconst DetailsOfMovie = ({\n  vote_average,\n  title,\n  overview,\n  genres,\n  poster_path,\n  release_date,\n  backdrop_path,\n}) => {\n  const releaseDate = new Date(release_date).getFullYear().toString();\n  const score = Math.round(vote_average * 10);\n  const poster = poster_path ? `${POSTER_URL}${poster_path}` : noPoster;\n  const genredGenres = () => {\n    return genres\n      ? genres.map(({ name }) => name).join(', ')\n      : 'No specific genre';\n  };\n\n  return (\n    <>\n      <div backdrop={backdrop_path}>\n\n        <img src={poster} alt={title} />\n\n        <div>\n          <h1>\n            {title} ({releaseDate})\n          </h1>\n          <p>User score: {score}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genredGenres()}</p>\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nDetailsOfMovie.propTypes = {\n  vote_average: PropTypes.number,\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n  backdrop_path: PropTypes.string,\n};\n\nexport default DetailsOfMovie;","import { useState, useRef, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { HTTP_ERROR_MSG } from 'services/constants';\nimport BackLink from 'components/BackLink/BackLink';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport Loader from 'components/Loader/Loader';\nimport DetailsOfMovie from 'components/DetailsOfMovie/DetailsOfMovie';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieDetails(movieId, '');\n        setMovie(data);\n      } catch (error) {\n        setError(HTTP_ERROR_MSG);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <section>\n      {loading && <Loader />}\n      <div>\n        <BackLink to={backLinkRef.current}>\n          <HiArrowNarrowLeft size={20} />\n          Go back\n        </BackLink>\n        {movie && (\n          <>\n            <DetailsOfMovie {...movie} />\n            <AdditionalInfo state={{ from: location }} />\n          </>\n        )}\n        {error && <div>{error}</div>}\n      </div>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  BASE_URL,\n  API_KEY,\n  TRENDING_ENDPOINT,\n  SEARCH_MOVIES_ENDPOINT,\n  MOVIE_ENDPOINT,\n} from './constants';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(TRENDING_ENDPOINT, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMoviesByQuery = async (query, page) => {\n  const response = await axios.get(SEARCH_MOVIES_ENDPOINT, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, details) => {\n  const response = await axios.get(`${MOVIE_ENDPOINT}/${movieId}${details}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '7d691cb5b3405ae4ec9a5d6e389d01f2';\nexport const TRENDING_ENDPOINT = '/trending/movie/day';\nexport const SEARCH_MOVIES_ENDPOINT = '/search/movie';\nexport const MOVIE_ENDPOINT = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const HTTP_ERROR_MSG = 'Oops! Something went wrong! Try reloading the page!';\n"],"names":["to","children","Suspense","fallback","Loader","vote_average","title","overview","genres","poster_path","release_date","backdrop_path","releaseDate","Date","getFullYear","toString","score","Math","round","poster","POSTER_URL","noPoster","backdrop","src","alt","map","name","join","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMovieDetails","getMovieDetails","data","HTTP_ERROR_MSG","current","size","axios","BASE_URL","getTrending","TRENDING_ENDPOINT","params","api_key","API_KEY","response","getMoviesByQuery","query","page","SEARCH_MOVIES_ENDPOINT","details","MOVIE_ENDPOINT"],"sourceRoot":""}