{"version":3,"file":"static/js/387.61626181.chunk.js","mappings":"6SAEaA,EAAiBC,EAAAA,GAAAA,GAAH,mEACd,qBAAGC,MAAkBC,OAAOC,KAA5B,IAIAC,EAAYJ,EAAAA,GAAAA,GAAH,wEAEE,qBAAGC,MAAkBC,OAAOG,MAA5B,IAGXC,EAAWN,EAAAA,GAAAA,GAAH,wGACR,qBAAGC,MAAkBC,OAAOC,KAA5B,IAMAI,EAAUP,EAAAA,GAAAA,GAAH,kDAIPQ,EAAgBR,EAAAA,GAAAA,EAAH,qCACjB,SAAAS,GAAC,OAAIA,EAAER,MAAMC,OAAOC,KAAnB,I,SC6BV,EA9CgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,uFACdV,EADc,wDAEnBM,GAAU,GAFS,mBAIEK,EAAAA,EAAAA,IAAgBX,EAAS,YAJ3B,OAIXY,EAJW,OAKjBR,EAAWQ,EAAKC,SALC,kDAOjBL,EAASM,EAAAA,IAPQ,yBASjBR,GAAU,GATO,6EAAH,qDAYlBI,GACD,GAAE,CAACV,KAGF,gCACGK,IAAU,SAACU,EAAA,EAAD,IACVZ,EAAQa,OAAS,IAChB,4BACE,SAAC3B,EAAD,UAAgB,aAChB,SAACK,EAAD,iBACGS,QADH,IACGA,OADH,EACGA,EAASc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,UAACxB,EAAD,YACE,UAACC,EAAD,WAAS,WAASsB,MAClB,uBAAIC,MAFSF,EADH,SASnBf,EAAQa,OAAS,IAChB,SAAClB,EAAD,UAAe,kEAEhBS,IAAS,yBAAMA,MAGrB,C,4JC1CDc,EAAAA,EAAAA,SAAAA,QAAyBC,EAAAA,GAElB,IAAMC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAUG,EAAAA,GAAmB,CAClDC,OAAQ,CACNC,QAASC,EAAAA,MAHY,cACnBC,EADmB,yBAMlBA,EAAShB,MANS,2CAAH,qDASXiB,EAAgB,mCAAG,WAAOC,EAAOC,EAAMC,GAApB,uFACPX,EAAAA,EAAAA,IAAUY,EAAAA,GAAwB,CACvDD,OAAAA,EACAP,OAAQ,CACNC,QAASC,EAAAA,GACTG,MAAOA,EACPC,KAAMA,KANoB,cACxBH,EADwB,yBASvBA,EAAShB,MATc,2CAAH,0DAYhBD,EAAe,mCAAG,WAAOX,EAASkC,EAASF,GAAzB,uFACNX,EAAAA,EAAAA,IAAA,UAAac,EAAAA,GAAb,YAA+BnC,GAA/B,OAAyCkC,GAAW,CACzEF,OAAAA,EACAP,OAAQ,CACNC,QAASC,EAAAA,MAJgB,cACvBC,EADuB,yBAOtBA,EAAShB,MAPa,2CAAH,yD,wMChCrB,IAAMU,EAAW,+BACXK,EAAU,mCACVH,EAAoB,sBACpBS,EAAyB,gBACzBE,EAAiB,SACjBC,EAAa,mCACbtB,EAAiB,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.jsx","services/constants.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const H2TitleReviews = styled.h2`\n    color: ${({ theme }) => theme.colors.white};\n    margin-bottom: 20px;\n`;\n\nexport const UlReviews = styled.ul`\n    padding: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n`;\n\nexport const LiReviev = styled.li`\n    color: ${({ theme }) => theme.colors.white};\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n`;\n\nexport const H2Autor = styled.h2`\n    margin-bottom: 20px;\n`;\n\nexport const AvailableInfo = styled.p`\ncolor: ${p => p.theme.colors.white};\n`;","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { HTTP_ERROR_MSG } from 'services/constants';\nimport { AvailableInfo, H2Autor, H2TitleReviews, LiReviev, UlReviews } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loging, setLoging] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      if (!movieId) return;\n      setLoging(true);\n      try {\n        const data = await getMovieDetails(movieId, '/reviews');\n        setReviews(data.results);\n      } catch (error) {\n        setError(HTTP_ERROR_MSG);\n      } finally {\n        setLoging(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loging && <Loader />}\n      {reviews.length > 0 && (\n        <div>\n          <H2TitleReviews>Reviews</H2TitleReviews>\n          <UlReviews>\n            {reviews?.map(({ id, author, content }) => (\n              <LiReviev key={id}>\n                <H2Autor>Author: {author}</H2Autor>\n                <p>{content}</p>\n              </LiReviev>\n            ))}\n          </UlReviews>\n        </div>\n      )}\n      {reviews.length < 1 && (\n        <AvailableInfo>Unfortunately, there are no reviews available for this movie.</AvailableInfo>\n      )}\n      {error && <div>{error}</div>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport {\n  BASE_URL,\n  API_KEY,\n  TRENDING_ENDPOINT,\n  SEARCH_MOVIES_ENDPOINT,\n  MOVIE_ENDPOINT,\n} from './constants';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get(TRENDING_ENDPOINT, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMoviesByQuery = async (query, page, signal) => {\n  const response = await axios.get(SEARCH_MOVIES_ENDPOINT, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      query: query,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, details, signal) => {\n  const response = await axios.get(`${MOVIE_ENDPOINT}/${movieId}${details}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '7d691cb5b3405ae4ec9a5d6e389d01f2';\nexport const TRENDING_ENDPOINT = '/trending/movie/day';\nexport const SEARCH_MOVIES_ENDPOINT = '/search/movie';\nexport const MOVIE_ENDPOINT = '/movie';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const HTTP_ERROR_MSG = 'Oops! Something went wrong! Try reloading the page!';\n"],"names":["H2TitleReviews","styled","theme","colors","white","UlReviews","accent","LiReviev","H2Autor","AvailableInfo","p","movieId","useParams","useState","reviews","setReviews","loging","setLoging","error","setError","useEffect","fetchReviews","getMovieDetails","data","results","HTTP_ERROR_MSG","Loader","length","map","id","author","content","axios","BASE_URL","getTrending","TRENDING_ENDPOINT","params","api_key","API_KEY","response","getMoviesByQuery","query","page","signal","SEARCH_MOVIES_ENDPOINT","details","MOVIE_ENDPOINT","POSTER_URL"],"sourceRoot":""}